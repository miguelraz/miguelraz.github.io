#@def title = "JuliaCon2022 Recap - My Highlights"
#@def author = "Miguel Raz GuzmÃ¡n Macedo"
#@def tags = ["JuliaCon"]
#@def rss = ""
#@def rss_pubdate = Date(2022, 07, 30)
#@def published = "July 30, 2022"

## Juliacon 2022

## Reading time: 20 minutes
## Summary:

```julia
@time_imports using CSV
```

Courses!

[Julia HPC course CSCC Tim Besard](https://enccs.github.io/Julia-for-HPC/)
[GPU PDEs!](https://pde-on-gpu.vaw.ethz.ch/)

Comrade.jl - after my own heart.

DitherPunk.jl - Adrian Hill
Absolutely awesome - it was fantastic to see that the inspiration for this package was the video game `Return to the Obra Dinn`. Great watch and package with 30 dithering algos - Great variety!
The colorschemes integrations with Pluto.jl and the colorpicker was a great showcase.
I was already super excited but seeing the ASCII art section was a knock-out.

Julia in VSCode:
Table view is awesome!!! Lazily loaded! And sorting! And filtering!
Choosing the `+lts` on a per workspace basis is very handy.
Shell integrations seem comfy
JuliaFormatter looks very useful
snippets in markdown with Julia can now be evaluated:
Linter + JET.jl integration is awesome
Clickable and re-runnable test items are awesome, specially for only *modified tests*.

Do Syntax considered harmless:
I liked the `flatmap` examples. I could definitely try and use more `do`s in my code, where effective, and I relate to the `don't use loops` mantra on some level. Also really nice to have heard aobu the performance of functional combinators with issue `#45000`.

How to be an effective Julia advocate
Good strategy for how to reach out to people. I don't know how Logan can handle so  many commitments and connections; He's very much worth a listen.

Time to say goodbye to good old PCA

IMGUI

DEI in the Julia community
Great news of about ~25% of julialang.org visitors being female. Nice!

Besselk.jl
I loved the concise summary at the beginning!
I'm a sucker for special functions - this was great stuff.
... that table at the end should have been a plot ;)

DTables.jl
vs Dask/Spark: really enjoyed the timeline of past efforts
Out of the box compatibility with DataFrames.jl is just amazing. This is fantastic work.

Building an inclusive and fun Julia community

`methods(which)`
I love basically all Jameson talks. Big sucker for deep dive talks of internals here.
... OK I should read the dev docs and base tests.
AlgebraOfGraphics
Based on Makie -> translate questions about data into relevant visualizations `declaratively`
Oh, very nice use of multiple dispatch with the composing layers with `*` and adding data with `+`
the GUI demo'd at the end is a killer!
A\b isn't the best!
use LinearSolve.jl
